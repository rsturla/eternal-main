name: Build Image
description: "Builds a container image using Podman"

inputs:
  context:
    description: "The build context directory"
    required: false
    default: "."
  containerfile:
    description: "The path to the Containerfile to build"
    required: false
    default: "Containerfile"
  image-name:
    description: "The name of the image to build"
    required: true
  image-tag:
    description: "The tag to apply to the image"
    required: true
  build-args:
    description: "Build arguments to pass to the Podman build.  Newline separated list of key=value pairs."
    required: false
    default: ""
  rechunk:
    description: "Whether the image should be rechunked"
    required: false
    default: false
  rechunk-prev-ref:
    description: "Previous image reference to use when rechunking"
    required: false

outputs:
  image:
    description: "The name of the built image"
    value: ${{ steps.set-outputs.outputs.image }}
  tag:
    description: "The tag applied to the built image"
    value: ${{ steps.set-outputs.outputs.tag }}
  digest:
    description: "The digest of the built image"
    value: ${{ steps.set-outputs.outputs.digest }}

runs:
  using: "composite"
  steps:
    - name: Build
      id: build-podman
      shell: bash
      env:
        BUILD_ARGS_INPUT: ${{ inputs.build-args }}
        TAG: ${{ inputs.image-tag }}
        RECHUNK: ${{ inputs.rechunk }}
      run: |
        set -x

        # If RECHUNK is true, run podman with sudo
        if [[ $RECHUNK == true ]]; then
          podman="sudo podman"
        else
          podman="podman"
        fi

        BUILD_ARGS=()
        while IFS= read -r build_arg; do
          if [ -z "$build_arg" ]; then
            continue
          fi
          BUILD_ARGS+=("--build-arg $build_arg")
        done <<< "${BUILD_ARGS_INPUT}"

        $podman build \
          ${BUILD_ARGS[@]} \
          -t ${{ inputs.image-name }}:$TAG \
          -f ${{ inputs.containerfile }} \
          ${{ inputs.context }}

        digest=$($podman image inspect ${{ inputs.image-name }}:${TAG} --format "{{.Digest}}")
        echo "digest=$digest" >> $GITHUB_OUTPUT

    - name: Rechunk
      id: rechunk
      if: ${{ inputs.rechunk == "true" }}
      uses: ./.github/actions/rechunk
      with:
        ref: ${{ inputs.image-name }}:${{ inputs.image-tag }}
        prev-ref: ${{ inputs.rechunk-rev-ref }}

    - name: Set Outputs
      id: set-outputs
      shell: bash
      env:
        BUILDER: ${{ inputs.builder }}
      run: |
        echo "image=${{ inputs.image-name }}" >> $GITHUB_OUTPUT
        echo "tags=${{ inputs.image-tags }}" >> $GITHUB_OUTPUT
        echo "digest=${{ steps.build-podman.outputs.digest }}" >> $GITHUB_OUTPUT
