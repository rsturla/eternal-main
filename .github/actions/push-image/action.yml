name: Push Image

inputs:
  image-name:
    description: 'The name of the image to build'
    required: true
  image-tags:
    description: 'The tags to apply to the image'
    required: true
  image-registry:
    description: 'The registry to push the image to'
    required: true
  builder:
    description: 'The name of the builder to use (docker or podman)'
    required: false
    default: 'podman'
  registry-username:
    description: 'The username to authenticate with the registry'
    required: false
    default: ${{ github.actor }}
  registry-password:
    description: 'The password to authenticate with the registry'
    required: false
    default: ${{ github.token }}
  compression-formats:
    description: 'A comma-separated list of compression formats to use'
    required: false
    default: 'gzip'


outputs:
  registry-path:
    description: 'The path to the pushed image in the registry'
    value: ${{ steps.set-outputs.outputs.registry-path }}
  digest:
    description: 'The digest of the image in the registry'
    value: ${{ steps.set-outputs.outputs.digest }}

runs:
  using: 'composite'
  steps:
    - name: Push (Podman)
      id: push-podman
      if: ${{ inputs.builder == 'podman' }}
      uses: ./.github/actions/push-image-podman
      with:
        image-name: ${{ inputs.image-name }}
        image-tags: ${{ inputs.image-tags }}
        image-registry: ${{ inputs.image-registry }}
        registry-username: ${{ inputs.registry-username }}
        registry-password: ${{ inputs.registry-password }}
        compression-formats: ${{ inputs.compression-formats }}

    - name: Push (Docker)
      id: push-docker
      if: ${{ inputs.builder == 'docker' }}
      uses: ./.github/actions/push-image-docker
      with:
        image-name: ${{ inputs.image-name }}
        image-tags: ${{ inputs.image-tags }}
        image-registry: ${{ inputs.image-registry }}
        registry-username: ${{ inputs.registry-username }}
        registry-password: ${{ inputs.registry-password }}
        compression-formats: ${{ inputs.compression-formats }}

    - name: Set Outputs
      id: set-outputs
      shell: bash
      env:
        BUILDER: ${{ inputs.builder }}
      run: |
        if [ $BUILDER == 'podman' ]; then
          echo "registry-path=${{ steps.push-podman.outputs.registry-path }}" >> $GITHUB_OUTPUT
          echo "digest=${{ steps.push-podman.outputs.digest }}" >> $GITHUB_OUTPUT
        else
          echo "registry-path=${{ steps.push-docker.outputs.registry-path }}" >> $GITHUB_OUTPUT
          echo "digest=${{ steps.push-docker.outputs.digest }}" >> $GITHUB_OUTPUT
        fi
