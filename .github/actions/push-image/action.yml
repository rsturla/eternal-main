name: Push Image
description: "Pushes a container image to a registry using Podman or Docker"

inputs:
  image-name:
    description: "The name of the image to build"
    required: true
  image-tags:
    description: "The tags to apply to the image"
    required: true
  image-registry:
    description: "The registry to push the image to"
    required: true
  builder:
    description: "The name of the builder to use (docker or podman)"
    required: false
    default: "podman"

outputs:
  registry-path:
    description: "The path to the pushed image in the registry"
    value: ${{ steps.set-outputs.outputs.registry-path }}
  digest:
    description: "The digest of the image in the registry"
    value: ${{ steps.set-outputs.outputs.digest }}

runs:
  using: "composite"
  steps:
    - name: Push (Podman)
      if: ${{ inputs.builder == 'podman' }}
      id: push-podman
      shell: bash
      run: |
        # Convert the tags to an array
        IFS=' ' read -ra TAGS <<< "${{ inputs.image-tags }}"
        tags=()

        # Push the image with each tag
        for tag in "${TAGS[@]}"; do
          image="${{ inputs.image-registry }}/${{ inputs.image-name }}:${tag}"
          echo "IMAGE=${image}"
          tags+=("${image}")
          podman tag "${{ inputs.image-name }}:${tag}" "${image}"
          podman push --digestfile /tmp/digestfile "${image}"
        done

        # Get the digest of the first tag
        digest=$(cat /tmp/digestfile)

        # Set the outputs
        echo "registry-path=${tags[0]}" >> $GITHUB_OUTPUT
        echo "digest=${digest}" >> $GITHUB_OUTPUT

    - name: Push (Docker)
      if: ${{ inputs.builder == 'docker' }}
      id: push-docker
      shell: bash
      run: |
        # Convert the tags to an array
        IFS=' ' read -ra TAGS <<< "${{ inputs.image-tags }}"
        tags=()

        # Push the image with each tag
        for tag in "${TAGS[@]}"; do
          image="${{ inputs.image-registry }}/${{ inputs.image-name }}:${tag}"
          echo "IMAGE=${image}"
          tags+=("${image}")
          docker image tag "${{ inputs.image-name }}:${tag}" "${image}"
          docker image push "${image}"
        done

        docker pull quay.io/skopeo/stable:latest
        digest=$(docker run quay.io/skopeo/stable:latest inspect docker://${tags[0]} --format '{{.Digest}}')

        # Set the outputs
        echo "registry-path=${tags[0]}" >> $GITHUB_OUTPUT
        echo "tags=${tags[@]}" >> $GITHUB_OUTPUT
        echo "digest=${digest}" >> $GITHUB_OUTPUT

    - name: Set Outputs
      id: set-outputs
      shell: bash
      env:
        BUILDER: ${{ inputs.builder }}
      run: |
        if [ $BUILDER == 'podman' ]; then
          echo "registry-path=${{ steps.push-podman.outputs.registry-path }}" >> $GITHUB_OUTPUT
          echo "digest=${{ steps.push-podman.outputs.digest }}" >> $GITHUB_OUTPUT
        else
          echo "registry-path=${{ steps.push-docker.outputs.registry-path }}" >> $GITHUB_OUTPUT
          echo "digest=${{ steps.push-docker.outputs.digest }}" >> $GITHUB_OUTPUT
        fi
