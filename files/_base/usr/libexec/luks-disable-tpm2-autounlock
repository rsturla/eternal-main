#!/usr/bin/env bash 

# Disable auto-unlock LUKS2 encrypted root

set -euxo pipefail

# Ensure the script is run as root
if [ "$UID" -ne 0 ]; then
  echo "This script must be run as root."
  exit 1
fi

# Confirm user has read the script
read -p "This will modify your system and disable TPM2 auto-unlock of your LUKS partition! Are you sure you've read the script and are good with this? (y/n) " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
  exit 1
fi

# Retrieve the disk UUID from crypttab
DISK_UUID=$(awk '{ print $2 }' /etc/crypttab | cut -d= -f2)
CRYPT_DISK="/dev/disk/by-uuid/$DISK_UUID"

# Backup the current crypttab before making changes
cp -a /etc/crypttab /etc/crypttab.working-before-disable-tpm2

# Restore the original crypttab if it exists
if [ -f /etc/crypttab.known-good ]; then
  echo "Restoring /etc/crypttab.known-good to original /etc/crypttab"
  mv /etc/crypttab.known-good /etc/crypttab
else
  echo "No /etc/crypttab.known-good found to restore"
fi

# Wipe TPM2 slot from LUKS if it exists
if cryptsetup luksDump "$CRYPT_DISK" | grep -q systemd-tpm2; then
  echo "Wiping systemd-tpm2 from LUKS on $CRYPT_DISK"
  systemd-cryptenroll --wipe-slot=tpm2 "$CRYPT_DISK"
else
  echo "No systemd-tpm2 found in LUKS to wipe"
fi

# Disable TPM2 in initramfs if present
if rpm-ostree initramfs | grep -q tpm2; then
  echo "WARNING: If you configured initramfs for anything other than TPM2, this will wipe that too."
  echo "Here's a printout of the current initramfs configuration:"
  rpm-ostree initramfs
  echo
  echo "Disabling rpm-ostree initramfs..."
  rpm-ostree initramfs --disable
else
  echo "TPM2 was not found in 'rpm-ostree initramfs'."
fi
