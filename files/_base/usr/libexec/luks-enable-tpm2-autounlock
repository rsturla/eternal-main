#!/usr/bin/env bash 

# Enable auto-unlock LUKS2 encrypted root

set -euxo pipefail

# Ensure the script is run as root
if [ "$UID" -ne 0 ]; then
  echo "This script must be run as root."
  exit 1
fi

# Confirm user has read the script
read -p "This will modify your system and enable TPM2 auto-unlock of your LUKS partition! Are you sure you've read the script and are good with this? (y/n) " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
  exit 1
fi

# Retrieve the disk UUID from crypttab
DISK_UUID=$(awk '{ print $2 }' /etc/crypttab | cut -d= -f2)
CRYPT_DISK="/dev/disk/by-uuid/$DISK_UUID"

# Backup the crypttab if not already backed up
BACKUP_PATH="/etc/crypttab.known-good"
if [ -f "$BACKUP_PATH" ]; then
  echo "Backup already exists at $BACKUP_PATH. Exiting..."
  exit 1
fi
cp -a /etc/crypttab "$BACKUP_PATH"

# Modify the crypttab to include TPM2 device
if grep -q tpm2-device /etc/crypttab; then
  echo "TPM2 already present in /etc/crypttab. Exiting..."
  exit 1
fi
sed -i "s/discard/discard,tpm2-device=auto/" /etc/crypttab

# Check if TPM2 is already enrolled in the LUKS keyslots
if cryptsetup luksDump "$CRYPT_DISK" | grep -q systemd-tpm2; then
  KEYSLOT=$(cryptsetup luksDump "$CRYPT_DISK" | grep -A23 systemd-tpm2 | grep Keyslot | awk '{print $2}')
  echo "TPM2 already present in LUKS Keyslot $KEYSLOT of $CRYPT_DISK. Exiting..."
  exit 1
fi

# Enroll TPM2
echo "Enrolling TPM2 unlock requires your existing LUKS2 unlock password"
systemd-cryptenroll --tpm2-device=auto --tpm2-pcrs=7 "$CRYPT_DISK"

# Check if tpm2-tss is present in the initramfs and update if necessary
if ! lsinitrd 2>&1 | grep -q tpm2-tss; then
  if rpm-ostree initramfs | grep -q tpm2; then
    echo "TPM2 already present in rpm-ostree initramfs config."
    rpm-ostree initramfs
    echo "Re-running initramfs to pick up changes."
  fi
  rpm-ostree initramfs --enable --arg=--force-add --arg=tpm2-tss
else
  echo "TPM2 already present in initramfs."
fi

# Prompt user to reboot
echo
echo "TPM2 LUKS auto-unlock configured. Reboot now."
