#!/usr/bin/env bash

# Create a hash of files so we can decide if we need to run this script
declare -a HASHED_FILES=(
  "/etc/flatpak/user/install"
  "/etc/flatpak/user/remove"
  "/usr/bin/flatpak-user-manager"
  "/usr/lib/systemd/user/flatpak-user-manager.service"
)
CURRENT_HASH=$(sha256sum "${HASHED_FILES[@]}" | sha256sum | awk '{print $1}')
HASH_FILE="$HOME/.config/flatpak-manager/lastrun"

# Compare the hash to the last run
if [[ -f "$HASH_FILE" ]]; then
  PREVIOUS_HASH=$(cat "$HASH_FILE")
  if [[ "$CURRENT_HASH" == "$PREVIOUS_HASH" ]]; then
    echo "Flatpak manager has already run. Exiting..."
    exit 0
  fi
fi

# Setup Flathub remote if it doesn't exist
if ! flatpak remote-list --user | grep -q "flathub"; then
  flatpak remote-add --user flathub https://flathub.org/repo/flathub.flatpakrepo
fi

# Lists of flatpaks
FLATPAK_LIST=$(flatpak list --columns=application)
INSTALL_LIST=$(cat "/etc/flatpak/user/install")
REMOVE_LIST=$(cat "/etc/flatpak/user/remove")

IS_ERROR=0

# Install flatpaks in the list
if [[ -n "$INSTALL_LIST" ]]; then
  for flatpak in $INSTALL_LIST; do
    if ! grep -qz "$flatpak" <<< "$FLATPAK_LIST"; then
      if ! flatpak install --user --noninteractive flathub "$flatpak"; then
        IS_ERROR=1
      fi
    fi
  done
fi

# Remove flatpaks in the list
if [[ -n "$REMOVE_LIST" ]]; then
  for flatpak in $REMOVE_LIST; do
    if grep -qz "$flatpak" <<< "$FLATPAK_LIST"; then
      if ! flatpak remove --user --noninteractive "$flatpak"; then
        IS_ERROR=1
      fi
    fi
  done
fi

# If there were no errors, update the hash file
if [[ $IS_ERROR -eq 0 ]]; then
  mkdir -p "$(dirname "$HASH_FILE")"
  echo "$CURRENT_HASH" > "$HASH_FILE"
fi

exit $IS_ERROR
